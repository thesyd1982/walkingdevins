// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id           Int            @id @default(autoincrement())
    createdAt    DateTime       @default(now())
    email        String         @unique
    password     String
    firstname    String?
    lastname     String?
    role         Int            @default(0)
    posts        Post[]
    RefreshToken RefreshToken[]
    Task         Task[]

    @@map("users")
}

model Post {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    published Boolean  @default(false)
    title     String   @unique @db.VarChar(255)
    content   String   @db.Text
    author    User?    @relation(fields: [authorId], references: [id])
    authorId  Int?

    @@map("posts")
}

model RefreshToken {
    id          Int      @id @default(autoincrement())
    hashedToken String   @unique
    userId      Int
    User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    revoked     Boolean  @default(false)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    @@map("refreshTokens")
}

model Task {
    id          Int      @id @default(autoincrement())
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    published   Boolean  @default(false)
    name        String   @unique @db.VarChar(255)
    description String   @db.Text

    creator  User? @relation(fields: [authorId], references: [id])
    authorId Int?

    @@map("tasks")
}
